apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thread-route-updater.fullname" . }}
  labels:
    {{- include "thread-route-updater.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "thread-route-updater.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "thread-route-updater.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "thread-route-updater.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: LOG_LEVEL
              value: {{ .Values.config.logLevel | quote }}
            - name: UBIQUITY_ROUTER_HOSTNAME
              value: {{ .Values.config.ubiquiti.hostname | quote }}
            - name: UBIQUITY_ROUTER_USERNAME
              value: {{ .Values.config.ubiquiti.username | quote }}
            - name: UBIQUITY_ROUTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ default (include "thread-route-updater.fullname" .) .Values.secrets.secretName }}
                  key: ubiquiti-password
            - name: UBIQUITY_ROUTER_INSECURE_SSL
              value: {{ .Values.config.ubiquiti.insecureSSL | quote }}
            - name: UBIQUITY_ROUTER_ENABLED
              value: {{ .Values.config.ubiquiti.enabled | quote }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - pgrep
                - thread-route-updater
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pgrep
                - thread-route-updater
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
